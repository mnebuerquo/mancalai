#!/bin/sh

set -e 

# set VER="3" for python3, or empty for 2.7
#TODO: get a value for this from an external environment variable?
VER="3"

# everything is set up for the selected version
PYTHON="python$VER"
PIP="pip$VER"
VIRTUAL="env$VER"

# these steps are done for the virtual env regardless
do_virtual() {
	. "$VIRTUAL/bin/activate"
	# always try to install, in case user edited requirements
	$PIP install -r requirements.txt
	# always freeze after install so user can see what is added
	$PIP freeze > requirements.txt
}

if [ ! -f requirements.txt ];then
	touch requirements.txt
fi
# create or activate
if [ ! -d "$VIRTUAL" ]; then
	# When creating the virutalenv, show all pip install steps in the
	# terminal, not just in log
	virtualenv -p $PYTHON "$VIRTUAL" 2>&1 | tee run.log
	do_virtual 2>&1 | tee run.log
else
	# when running with a virtualenv already created, send all of this
	# output to the log only
	do_virtual > run.log 2>&1
fi

# Some of the packages we just installed may have properties which are set
# in the environment, and they will not be correct until we activate again.
# One of these is 'requests'.
. "$VIRTUAL/bin/activate"

# run!
set -a
if [ -f .env ]; then
	. .env
fi
CWD=$(pwd)
export PYTHONPATH="$CWD:$PYTHONPATH"
$PYTHON "${@:1}"
